# Python Scientific Calculator - .gitignore
# Comprehensive ignore rules for Python development

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation  
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is not recommended to check the .idea/ directory into version control.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Windows shortcuts
*.lnk

# Calculator specific files
calculator_history.txt
calculator_config.ini
*.calc
*.calculator

# Temporary calculation files
temp_calculations/
*.tmp
*.temp

# User data
user_variables.json
saved_expressions.txt

# Logs
logs/
*.log

# Screenshots and demos
screenshots/
demos/
recordings/

# Backup files
*.bak
*.backup
*~

# Virtual environment names (common names)
calc-env/
calculator-env/
scientific-calc/

# Build artifacts
calculator.exe
calculator_gui.exe
calculator_cli.exe

# Packaging
*.deb
*.rpm
*.msi
*.dmg
*.app

# Documentation builds
docs/build/
docs/_build/
*.pdf
*.epub

# Example outputs
example_outputs/
sample_calculations/

# Performance profiling
*.prof
*.profile

# Security
*.pem
*.key
secrets.py
config_private.py

# Database files (if any future features use databases)
*.db
*.sqlite
*.sqlite3

# Cache directories
cache/
.cache/
tmp/
temp/

# IDE specific
.vscode/settings.json
.idea/workspace.xml
.idea/tasks.xml
.idea/dictionaries/
.idea/shelf/

# Local configuration
local_config.py
development_config.py

# Compiled translations
*.mo

# Generated documentation
api_docs/
sphinx_docs/

# Test outputs
test_results/
test_reports/
junit.xml

# Continuous Integration
.github/workflows/secrets
.travis.yml.bak
.circleci/config.yml.bak

# Package management
Pipfile
requirements-dev.txt
requirements-test.txt

# Local development
.local/
bin/
include/
pyvenv.cfg

# Conda
.conda/

# Node.js (if any web features added later)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# pyenv
.python-version

# Internationalization
locale/
*.po

# Custom ignores for this project
calculator_*.bat
calculator_*.sh
setup_temp/
install_temp/

# End of .gitignore
